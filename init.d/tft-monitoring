#!/bin/bash
### BEGIN INIT INFO
# Provides:          tft-monitoring
# Required-Start:    $network $local_fs $remote_fs
# Required-Stop:     $network $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: TFT Monitoring System
# Description:       Temporal Fusion Transformer Monitoring System
#                    Starts metrics generator, inference daemon, and dashboard
### END INIT INFO

# Path to TFT installation
TFT_HOME="/opt/tft-monitoring"
TFT_USER="tftuser"

# Source function library
if [ -f /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
elif [ -f /lib/lsb/init-functions ]; then
    . /lib/lsb/init-functions
fi

# Return values according to LSB
RETVAL=0

start() {
    echo -n "Starting TFT Monitoring System: "

    # Switch to TFT user and run startup script
    su - "$TFT_USER" -c "cd $TFT_HOME && ./start_all_corp.sh"
    RETVAL=$?

    if [ $RETVAL -eq 0 ]; then
        echo "[ OK ]"
    else
        echo "[ FAILED ]"
    fi

    return $RETVAL
}

stop() {
    echo -n "Stopping TFT Monitoring System: "

    # Switch to TFT user and run stop script
    su - "$TFT_USER" -c "cd $TFT_HOME && ./stop_all.sh"
    RETVAL=$?

    if [ $RETVAL -eq 0 ]; then
        echo "[ OK ]"
    else
        echo "[ FAILED ]"
    fi

    return $RETVAL
}

status() {
    echo "TFT Monitoring System Status:"
    echo ""

    # Check PID files
    if [ -f "$TFT_HOME/logs/metrics_generator.pid" ]; then
        PID=$(cat "$TFT_HOME/logs/metrics_generator.pid")
        if kill -0 $PID 2>/dev/null; then
            echo "  Metrics Generator: RUNNING (PID: $PID)"
        else
            echo "  Metrics Generator: STOPPED (stale PID)"
        fi
    else
        echo "  Metrics Generator: STOPPED"
    fi

    if [ -f "$TFT_HOME/logs/inference_daemon.pid" ]; then
        PID=$(cat "$TFT_HOME/logs/inference_daemon.pid")
        if kill -0 $PID 2>/dev/null; then
            echo "  Inference Daemon:  RUNNING (PID: $PID)"
        else
            echo "  Inference Daemon:  STOPPED (stale PID)"
        fi
    else
        echo "  Inference Daemon:  STOPPED"
    fi

    if [ -f "$TFT_HOME/logs/dashboard.pid" ]; then
        PID=$(cat "$TFT_HOME/logs/dashboard.pid")
        if kill -0 $PID 2>/dev/null; then
            echo "  Dashboard:         RUNNING (PID: $PID)"
        else
            echo "  Dashboard:         STOPPED (stale PID)"
        fi
    else
        echo "  Dashboard:         STOPPED"
    fi

    echo ""
    echo "Service URLs:"
    echo "  Metrics Generator: http://localhost:8001"
    echo "  Inference Daemon:  http://localhost:8000"
    echo "  Dashboard:         http://localhost:8501"
}

restart() {
    stop
    sleep 2
    start
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart|reload|force-reload)
        restart
        ;;
    *)
        echo "Usage: $0 {start|stop|status|restart|reload|force-reload}"
        exit 1
        ;;
esac

exit $RETVAL
